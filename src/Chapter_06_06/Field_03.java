package Chapter_06_06;

public class Field_03 {

	public static void main(String[] args) {

		
		// 필드 사용
		
		// 필드를 사용한다는 것은 필드값을 읽고, 변경하는 작업을 말한다.
		// 클래스 내부의 생성자나 메소드에서 사용할 경우 단순히 필드 이름으로 읽고 변경하면 되지만, 클래스 외부에서 사용할 경우 우선적으로 클래스로부터 객체를 생성한 뒤 필드를 사용해야 한다.
		// 그 이유는 필드는 객체에 소속된 데이터이므로 객체가 존재하지 않으면 필드로 존재하지 않기 때문이다.
		
		// page 200 참고
		// 그림을 보면 Car 클래스의 speed 필드는 생성자와 메소드에서 변경이 가능하다.
		// 사용 방법은 변수와 동일한데, 차이점은 변수는 자신이 선언된 생성자 또는 메소드 블록 내부에서만 사용할 수 있는 반명 필드는 생성자와 모든 메소드에서 사용이 가능하다.
		// 외부 Person 클래스에서 Car 클래스의 speed 필드값을 사용하려면 Car 객체를 우선 생성해야한다.
		
		// Car myCar = new Car();
		
		// myCar 변수가 Car 객체를 참조하게 되면 도트(.) 연산자를 사용해서 speed 필드에 접근할 수 있다.
		// 도트(.) 연산자는 객체 접근 연산자로 객체가 가지고 있는 필드나, 메소드를 사용하고자 할 때 사용된다.
		// 다음 코드는 Car 객체의 speed 필드값을 60으로 변경하고 있다.
		
//		myCar.speed=60;
		
		
		// Car 클래스는 speed 필드 선언 시 초기값을 주지 않았다.
		// 그러나 출력해보면 기본값인 0이 들어있는 것을 볼 수 있다.
		// 다음 예제는 여러 가지 타입의 필드가 어떤 값으로 자동 차기화 되는건지 확인시켜준다.
		
		
		
	}

}
