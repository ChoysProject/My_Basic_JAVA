package Chapter_05_06;

public class Arrangement_Type_03 {

	public static void main(String[] args) {

		// 값 목록으로 배열 생성
		
		// 배열 항목에 저장될 값의 목록이 있다면, 다음과 같이 간단하게 배열 객체를 만들 수 있다.
		
		// 데이터타입[] 변수 = {변수1, 변수2, 변수3, 변수4};
		
		// 중괄호{}는 주어진 값들을 항목으로 가지는 배열 객체를 힙에 생성하고, 배열 객체의 번지를 리턴한다.
		// 배열 변수는 리턴된 번지를 저장함으로써 참조가 이루어진다.
		// 예를들어 "조영상", "최인혁", "김범수" 문자열을 갖는 배열은 다음과 같이 생성할 수 있다.
		
		String[] names = {"조영상","최인혁","이동근"};
	
		// 이렇게 생성된 배열에서 "조영상"은 names[0], names[1]은 "최인혁" 으로 들어있다.
		// 이름을 바꾸고 싶다면 다음과 같이 대입연산자를 사용하면 된다.
		// name[0] = "조용상";
		
		// 값의 목록으로 배열 객체를 생성할 때 주의할 점이 있는데, 배열 변수를 이미 선언한 후에 다른 실행문에서 중괄호를 사용한 배열 생성은 허용되지 않는다.
		
		// 타입[] 변수;
		// 변수 = {값0, 값1, 값2, 값3 ...}; // 컴파일러 에러
		
		// 배열 변수를 미리 선언한 후, 값 목록들이 나중에 결정되는 상홍이라면 다음과 같이 new 연산자를 사용해서 값 목록을 지정해주면 된다.
		// new 연산자 바로 뒤에서 배열 변수 선언에서 사용한 타입 을 붙여주고 중괄호 {}에는 값들을 나열해주면된다.
		
		// 변수 = new 타입[] {값0, 값1, 값3};
		
		// 예를 들어 배열 names를 다음과 같이 생성할 수 있다.
		
		// String[] names = null;
		// names = new String[] {"조영상", "최인혁", "이동근"};
		
		// 메소드의 매개값이 배열일 경우에도 마찬가지다. 아래와 같이 매개 변수로 int[]배열이 선언된 add() 메소드가 있을 경우, 값 목록으로 배열을 생성함과 동시에 add() 메서드의 매개값으로 사용하고자 할 떄는 반드시 new 연산자를 사용해야한다.
		
		// int add(int[] scores){...}
		
		// int result = add ({95,85,90}); // 컴파일 에러
		// int result = add (new int[] {95, 85,90});
		
	}

}
