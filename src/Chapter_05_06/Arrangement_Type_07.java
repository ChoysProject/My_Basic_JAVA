package Chapter_05_06;

public class Arrangement_Type_07 {

	public static void main(String[] args) {

		// 다차원 배열
		
		// 지금까지 살펴본 배열은 값 목록으로 구성된 1차원 배열이다.
		// 이와는 달리 값들이 행과 열로서 구성된 배열을 2차원 배열이라고 한다.
		// 2차원 밸열은 수학의 행렬을 떠올리면 되는데, 가로 인덱스와 세로 인덱스를 사용한다.
		// 자바는 2차원 배열을 중첩 배열 방식으로 구현한다.
		// 예를 들어 2(행) x 3(열)을 만들기 위해서 다음과 같은 코드를 사용한다.
		
//		int[][] scores = new int[2][3];
		
		// 배열 변수인 scores는 길이 2인 배열 A를 참조한다. 
		// 배열 A의 scores[0]은 다시 길이 3인 배열 B를 참조한다.
		// 그리고 scores[1] 역시 길이 3인 배열 C를 참조한다.
		// scores[0]과 scores[1] 모두 배열을 참조하는 변수 역할을 한다.
		// 따라서 각 배열의 길이는 다음과 같이 얻을 수 있다.
		
//		scores.length; // 2(배열 A의 길이)
//		scores[0].length // 3(배열 B의 길이)
//		scores[1].length // 3(배열 C의 길이)
		
		// 생성원리는 수학 행렬과는 근본적으로 다르지만 사용 방식은 행렬과 동일하다.
		// scores[0][1]은 배열은 배열 B의 인덱스 1값을 뜻한다.
		// 수학 행렬에서는 (0, 1)값이라고 볼 수 있다.
		// 마찬가지로 scores[1][0]은 배열 C의 인덱스 0값을 뜻한다.
		// 이것은 수학 행렬의 (1, 0)값이라고 볼 수 있다.
		// 마찬가지로 scores[1][0]은 배열 C의 인덱스 0 값을 뜻한다. 이것은 수학 행렬의 (1,0)값이다.
		// 자바는 일차원 배열이 서로 연결된 구조로 다차원 배열을 구현하기 떄문에 수학 행렬 구조가 아닌 계단식 구조를 가질 수 있다.
		
		int[][] scores = new int[2][];
		scores[0] = new int[2];
		scores[1] = new int[3];
		
		// 이 경우 배열의 항목의 수를 조사해보면 다음과 같다.
		
//		scores.length;
//		scores[0].length;
//		scores[1].length;
		
		// 이런 형태의 배열에서 주의할 점은 정확한 배열의 길이를 알고 인덱스를 사용해야한다.
		// scores[0][2]는 ArrayIndexOutOfBoundException을 발생시킨다. 잉는 배열 B 객체의 마지막 인덱스는 1이기 때문이다. 하지만 scores[1][2]는 배열 C객체의 세 번째 항목을 가르킨다.
		// 만약 그룹화된 값 목록을 가지고 있다면 다음과 같이 중괄호 안에 다시 중괄호를 사용해서 값 목록을 나열하면 된다.
		
		// 타입[][] 변수 = {{값1, 값2},{값1, 값2}};
		//					0그룹 값		1그룹 값
		
		// 예를들어 그룹화된 성적 점수를 이용해서 다음과 같은 배열을 만들 수 있다.
		// scores[0]에는 {95,80} 배열을 참조하고, scores[1],{92,96} 배열을 참조한다.
		
		// int[][] scores = {{95,80},{92,96}};
		
		// 위 코드로 생성된 scores 배열에서 항목 값은 다음과 같이 읽을 수 있다.
		
//		int score = scores[0][0]; // 95
//		int score = scores[1][1]; // 96
				
	}

}
