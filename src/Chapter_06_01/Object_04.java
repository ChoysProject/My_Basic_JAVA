package Chapter_06_01;

public class Object_04 {

	
	
	public static void main(String[] args) {
		
		// 객체는 개별적으로 사용될 수 있지만, 대부분 다른 객체와 관례를 맺고 있다.
		// 이 관계의 종류에는 집합 관계, 사용 관계, 상속 관계가 있다.
		
		// 집합 관계에 있는 객체는 하나는 부품이고 하나는 완성품에 해당한다.
		// 예를 들어 자동차는 엔진, 타이어, 핸들 등으로 구성되므로 자동차와 이 부품들은 집합의 관계라고 볼 수 있다.
		// 사용 관계는 객체 간의 상호작용을 말한다.
		// 객체는 다른 객체의 메소드를 호출하여 원하는 결가를 얻어낸다.
		// 예를들어 사람은 자동차를 사용하므로 사람과 자동차는 사용의 관계라고 볼 수 있다.
		
		// 사람은 자동차를 사용할 때 달린다. 멈춤다 등의 메소드를 호출한다.
		
		// 상속관계는 상위(부모) 객체를 기반으로 하위(자식) 객체를 생성하는 관계를 말한다.
		// 일반적으로 상위 객체는 종류를 의미하고, 하위객체는 구체적인 사물에 해당한다. 예를 들어 "자동차는 기계의 종류이다." 에서 기계(상위) 와 자동차(하위)는 상송관계에 있다고 볼 수 있다.
		
		// 객체 지향 프로그래밍은 만들고자 하는 완성품인 객체를 모델링하고, 집합 관계에 있는 부품 객체와 사용 관계에 있는 객체를 하나씩 설계한 후 조립하는 방식으로 프로그램을 개발하는 기법이다.
		
		
		
		
		
	}
	
	
}
