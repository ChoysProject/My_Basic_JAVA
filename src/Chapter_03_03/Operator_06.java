package Chapter_03_03;

public class Operator_06 {

	public static void main(String[] args) {

		// 산술 연산자 (+, -, *, /, %)
		
		// 우리가 일반적으로 말하는 사칙 연산인 더하기(+), 빼기(-), 곱하기(*), 나누기(/)와 나머지를 구하는 연산자 (%)를 포함해서 산술 연산자는 총 5개이다.
		// 이 산술 연산자는 boolean 타입을 제외한 모든 기	본 타입에 사용 할 수 있다.
		
		// 피연산자	+	피연산자	덧셈연산
		// 피연산자	-	피연산자	뺼셈연산
		// 피연산자	*	피연산자	곱셉연산
		// 피연산자	/	피연산자	좌측 피연산자를 우측 피연산자로 나눗셈 연산
		// 피연산자	%	피연산자	좌측	피연산자를 우측 피연산자로 나눈 나머지를 구하는 
		
		
		// 산술 연산자는 우리가 익히 알고 있기 때문에 따로 설명을 하지 않아도 될 것 같다.
		// 주의할 점은 곱셈의 경우 연산자가 x가 아니라 *를 사용하고, 나눈셈의 경우 /를 사용한다.
		// % 연산자가 조금 생소할 지도 모르겠다.
		// % 연산자는 나눗셈을 수행하고, 몫이 아닌 나머지를 돌려주는 연산자이다.
		// int reuslt = num % 3; 에서 result에 저장되는 값은 num의 값에 따라 0,1,2 중 한값이 된다.
		// 왜냐하면 어떤 수를 3으로 나누었을 경우 나머지는 세 숫자 중 하나이기 떄문이다.
		
		// 산술 연산자의 특징은 피연산자들의 타입이 동일하지 않을 경우 다음과 같은 규칙을 사용해서 피연산자들의 타입을 일치시킨 후 연산을 수행한다.
		
		// 1. 피연산자들의 모두 정수타입이고, int 타입보다 크기가 작은 타입일 경우 모두 int 타입으로 변환호, 연산을 수행한다. 따라서 연산의 산출 타입은 int다.
		// byte + byte -> int + int = int
		
		// 2. 피연산자들이 모두 정수 타입이고, long 타입이 있을 경우 모두 long타입으로 변환 후, 연산을 수핸한다. 따라서 연산의 산출타입은 long이다.
		// int + long -> long + long = long
		
		// 3. 피연산자 중 실수 타입(float 타입, double 타입)이 있을 경우, 크기가 큰 실수 타입으로 변환 후, 연산을 수행한다. 따라서 연산의 산출 타입은 실수 타입이다.
		// int + double -> double + double = double
		
		// 간단하게 정리하면 long을 제외한 정수 타입 여난은 int 타입으로 산출되고, 피연산자 중 하나라도 실수 타입이면, 실수타입으로 산출된다.
		
		
	}

}
