package Chapter_03_03;

public class Operator_01 {

	public static void main(String[] args) {

		// 단항 연산자
		// 단항 연산자는 피연산자가 단 하나뿐인 연산자를 말하며, 여기에는 부호 연산자 (+,-), 증감 연ㅅ나자 (++, --), 논리 부정 연산자 (!), 비트 반전 연산자(~) 가 있다.
		
		// 부호 연산자 (+,-)
		// 부호 연산자는 양수 및 음수를 표시하는 +.-를 말한다. boolean 타입과 char 타입을 제외한 나머지 기본타입에 사용할 수 있다.
		
		// 연산식			설명
		// +  피연산자		피연산자의 부호 유지
		// -  피연산자		피연산자의 부호 변경
		
		// +, -는 산술 연산자이기도하고, 부호 연산자이기도하다. 부호 연산자로 쓰일 떄에는 하나의 피연산자만 필요하다. 일반적으로 부호 연ㅅ나자를 다음과 같이 정수 및 실수 리터럴 앞에 붙여 양수 및 음수를 표한한다.
		
		int i1 = +100;
		int i2 = -100;
		double d1 = +3.14;
		double d2 = -10.5;
		
		// 부호 연산자를 정수 또는 실수 타입 변수 앞에 붙일 수도 있다. 
		// 이 경우는 변수를 양수 및 음수로 표현한 것이 아니고, 변수 값의 부호를 유지하거나 바꾸기 위해서 사용한다. 
		
		int x = 100;
		int result1 = +x;
		int result2 = -x;
		
		
		// 부호 연산자를 사용할 때 주의할 점은 부호 연산자의 산출 타입은 int 타입이 된다는 것이다. 
		// 예를 들어 short 타입 값을 부호 연산하면 int 타입 값으로 바뀐다. 그래서 컴파일 에러가 생기지 않게 주의
		short s = 100;
//		short result = -s; // 컴파일 에러
		
		short s1 = 100;
		int result3 = -s;
	}

}
